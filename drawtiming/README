INTRODUCTION

This project provides a command line tool for documenting hardware and
software designs through timing diagrams.  It includes a parser for
reading an intuitive ASCII signal description from an input file, and
uses the ImageMagick Magick++ API for rasterizing and outputting an
image of an ideal timing diagram.  Notation typical of timing diagrams
found in the Electrical Engineering discipline, including the signal
state transitions with arrows indicating causal relationships between
signals is generated.  I am not aware of any noncommercial application
to perform a similiar function.  It is written in C++, and has been
tested on Linux, FreeBSD and Cygwin.  

If you aren't sure what I mean by ideal timing diagrams, then take a
look at the project homepage (http://drawtiming.sourceforge.net) or
take a look in the "samples" directory after running "make check" on
this package.  An ideal timing diagram does not convey propigation
delays between signal transitions.

I use this software to document the design of hardware and software
projects.  I find the resulting timing diagrams to be a good
complement to call plots for some software projects -- especially
those with complex relationships between various signals and state
variables.  Prior to writing this software, I created timing diagrams
using schematic CAD software, but making changes to the signal
behavior after the diagram was drawn was too much trouble.

The software is licensed under the terms of the GPL.  See the COPYING
file for details of the terms under which you may modify or
redistribute this software.

INSTALL

This package requires the Magick++ API from ImageMagick.  See the
INSTALL file for generic instructions.  Step-by-step instructions can
be found online at http://drawtiming.sourceforge.net/install.html

USAGE

Please see the file drawtiming.html in the doc directory.  That file
describes the command usage and input file syntax.  It also includes
an example.

